
<input type="text" id="customerId" name="customerId" value="@ViewBag.Id" hidden />
@(
Html.Kendo().Grid<UserViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(e => e.name).Title("Khách hàng");
        columns.Bound(e => e.phone_number).Title("Số điện thoại");
        columns.Bound(e => e.address).Title("Địa chỉ").Width("250").ClientTemplate("<div class='text-ellipsis'>#= address #</div>");//.Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains)));
        columns.Bound(e => e.postal_code).Title("Mã bưu cục").Width("100");
        columns.Bound(e => e.amount).Title("Tổng cộng").Width("150").Format("{0:N0} ₫");//.Filterable(ftb => ftb.Cell(cell => cell.Operator("eq")));
        columns.Bound(e => e.count_order).Title("Số lượng đơn").Width("150");
    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Read(read => read.Action("Customers_Read", "HR").Data("additionalData"))
        .Model(model =>
            {
                model.Id(field => field.user_id);
            })
    )
    .ClientDetailTemplateId("template")
    //.Filterable()
    //.Sortable()
    .Scrollable()
    .Pageable(pager => pager
        .Refresh(true)
        .PageSizes(new[] { 10, 20, 50, 100, 200, })
        .ButtonCount(5)
    )
//.Pageable()
)

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
            .Name("tabStrip_#=id#")
            .SelectedIndex(0)
            .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
            .Items(items =>
            {
                items.Add().Text("Đơn hàng").Content(@<text>
                @(Html.Kendo().Grid<Order>()
                    .Name("grid_#=id#")
                    .Columns(columns =>
                    {
                    columns.Bound(o => o.order_name).Title("Sản phẩm").Width("180").ClientTemplate("<div class='text-ellipsis'>\\#= order_name \\#</div>");
                    columns.Bound(o => o.Shipping.shipp_charges).Title("Phí vận chuyển").Format("{0:N0} ₫");
                    columns.Bound(o => o.amount).Title("Tổng cộng").Format("{0:N0} ₫");
                    columns.Bound(o => o.payment_method).Title("Thanh toán");
                    columns.Bound(o => o.creation_time).Title("Ngày tạo").ClientTemplate("\\#= kendo.toString(kendo.parseDate(creation_time), 'h:MM dd-MM-yyyy') \\#");
                    columns.Bound(o => o.shop_first_name).Title("Shop");
                    columns.Bound(o => o.Shipping.status).Title("Trạng thái");
                    columns.Bound(o => o.Shipping.problem_type).Title("Vấn đề").ClientTemplate("\\#= Shipping.problem_type \\#");
                    })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(5)
                        .Aggregates( aggregates => {
                            aggregates.Add(ord => ord.id).Count();
                            aggregates.Add(ord => ord.amount).Sum();
                        })
                        .Read(read => read.Action("OrdersByUserId_Read", "Package", new{ id = "#=id#" })))
                    .Events(events => events.DataBinding("onDataBound"))
                    .Pageable()
                    .Sortable()
                    .Resizable(resize => resize.Columns(true))
                    .ToClientTemplate()
                )
                </text>);

                items.Add().Text("Combo").Content(@<text>
                    <div class="weather">
                        <div class="temperature">
                            <div class="degrees">
                                <h2>22<span>&ordm;</span></h2>
                                <p>24<span>&ordm;</span>&nbsp;/&nbsp;9<span>&ordm;</span></p>
                            </div>
                        </div>
                        <div class="details">
                            <div class="location">Sofia, BG</div>
                            <div class="stats">
                                <p>Chance of Rain: 67%</p>
                                <p>Humidity: 92%</p>
                            </div>
                        </div>
                    </div>
                </text>);

                    items.Add().Text("Lịch sử").Content(@<text>
                    <div class="weather">
                        <div class="temperature">
                            <div class="degrees">
                                <h2>22<span>&ordm;</span></h2>
                                <p>24<span>&ordm;</span>&nbsp;/&nbsp;9<span>&ordm;</span></p>
                            </div>
                        </div>
                        <div class="details">
                            <div class="location">Sofia, BG</div>
                            <div class="stats">
                                <p>Chance of Rain: 67%</p>
                                <p>Humidity: 92%</p>
                            </div>
                        </div>
                    </div>
                </text>);
            }).ToClientTemplate()
        )
</script>

<script>

    function additionalData() {
        console.log($("#customerId").val());
        return {
            id: $("#customerId").val(),
        };
    }

    function showOrderCount(data) {
        var i = 0;
        for (var item of data) {
            i++;
        }
        return i;
    }

    function showOrderAmoutSum(data) {
        var i = 0;
        for (var item of data) {
            i += item.amount;
        }
        return formatVND(i);
    }
    function onDataBound(e) {
        //var grid = e.sender;
        //var data = grid.dataSource.view(); // Get current page data


        //this.expandRow(this.tbody.find("tr.k-master-row").first());
    }

    function onError(e) {
        if (e.errors) {
            var message = "Errors:\n";
            if (e.status == "customerror") {
                $.each(e.errors, function (key, value) {
                    message += value + "\n";
                });
            }
            else {
                message += "Generic server error." + "\n";
            }

            alert(message);
        }
    }

    function formatVND(fm) {
        return parseFloat(fm).toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ',') + " ₫";
    }
</script>

<style>

</style>